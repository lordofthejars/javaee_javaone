mixin slide(names, slideClasses)
  if names
    section(class=names+' '+slideClasses, data-bespoke-backdrop='backdrop ' + names.split(' ').map(function(name) { return 'backdrop--' + name; }).join(' '))
      block
  else
    section
      block

doctype html
html
  head
  meta(charset='utf-8')
  meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
  title Innovating Democracy with Java EE and Open Source 

  link(rel='stylesheet', type='text/css', href='build/build.css')
  link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css')

  body

    article

      +slide
        h1  Innovating Democracy with Java EE and Open Source
        aside(role='note') My experience in several projects

      +slide
        img.avatar(src='images/profile.jpg')
        h4 @alexsotob - lordofthejars.com
        img.cloudbees(src='images/cloudbees.png')
        img.logos(src='images/logos.png')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide
        div.images
          img.side-by-side(src='images/dzone1.png')
          img.side-by-side(src='images/aia.jpg')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('especies')
        h2 Take What 
        h3 &mdash; You &mdash; 
        h2 Need
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('adarise')
        h1 Questions
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars

      +slide('java_ee')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Different elements Tech and not Tech
        
      +slide('allblacks')
        h2 Team
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Comes from developers
        
      +slide('fit')
        h2.underline Only Services
        ul.lists
          li JAX-RS
          li JSON-P
          li Bean Validation
          li EJB
          li JPA
          li CDI
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') AngularJS, Materials ... + JSON
    
      +slide('runner')
        h1.title-single-words Application <span class='important'>Server</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Open source for transparency
      
      +slide('tomee')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('tomcat')
        h2 It is a 
        h2 <span class='important'>Tomcat</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') IDE, IT who deploys happy
        
      +slide('certified')
        h2 It is 
        h2 <span class='important'>Certified</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Portable and knowldgable, and tested
    
      +slide('light')
        h2 It is 
        h2 <span class='important'>Light</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') under 100MB of RAM
      
      +slide('shin')
        h2 It is 
        h2 <span class='important'>Fast</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
    
      +slide('engine')
        h2 Let's see in Action
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
    
      +slide('gears')
        h1.title-single-words <span class='important'>JavaEE</span> In Practice
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars 
    
      +slide
        h2 Dependencies
        pre.small.language-javascript
          code.
            dependencies {
              providedCompile group: 'javax', name: 'javaee-api', version:'7.0'
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Provided implementation is on server side
      
      +slide    
        h2 JAX-RS
        pre.small.language-javascript
          code.
            @Singleton
            @Lock(LockType.READ)
            @Path("/color")
            public class ColorService {
            
              @PersistenceContext
              EntityManager em;
            
              @Inject @SHA1MEssageDigest
              MessageDigest messageDigest;
              
              @POST @Path("{color}") 
              @Consumes({APPLICATION_JSON})
              public void addColor(
                          @PathParam("color") @Size(min = 2, max = 4) String nameColor, 
                          @Valid Color color) {
                          
                }
            }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') EJB (sec, trans, conc) Bean Validation
      
      +slide    
        h2 CDI
        pre.small.language-javascript
          code.
            
            //Logic
            @Inject
            @SMS
            Event&lt;NotificationEvent&gt; smsEvent;
            
            smsEvent.fire(new NotificationEvent());
            
            // Spain SMS JAR
            public void sendSMS(@Observes @SMS NotificationEvent event) {
            }
            // US SMS JAR
            public void sendSMS(@Observes @SMS NotificationEvent event) {
            }
            
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Events as library
      
      +slide('rescue')
        h1.title-single-words <span class='important'>TomEE</span> To The <span class='important'>Rescue</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        
      +slide('cockpit')
        h2 Configuration
        h3 &mdash; of &mdash;
        h2 Resources
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide    
        h2 Resource Configuration
        h3 conf/tomee.xml &mdash; WEB-INF/resources.xml
        pre.small.language-xml
          code.
            &lt;tomee&gt;
              &lt;Resource id=”myds” type=”DataSource”&gt;
                JdbcDriver = org.hsqldb.jdbc.JDBCDriver
                JdbcUrl = jdbc:hsqldb:mem:my-datasource
                Username = SA
                Password =
                minEvictableIdleTime = 30 minutes
              &lt;/Resource&gt;

              &lt;Container id=”stateless-container” type=”STATELESS”&gt;
                PoolSize = 50
                StrictPooling = true
              &lt;/Container&gt;
            &lt;/tomee&gt;
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Classpath (resources tag) or global (tomee tag), Readable (time), Work with defaults (HSQLDB)
        
      +slide    
        h2 Placeholders
        pre.small.language-xml
          code.
            &lt;tomee&gt;
              &lt;Resource id=”myds” type=”DataSource”&gt;
                JdbcUrl = ${DB_URL:-jdbc:hsqldb:mem:}movies
              &lt;/Resource&gt;
            &lt;/tomee&gt;
            
            export DB_URL=jdbc:mysql://localhost/
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Defaults + system environment - Idea in Docker ENV + Partial things
      
      +slide    
        h2 System Properties
        pre.small.language-xml
          code.
            &lt;tomee&gt;
              &lt;Resource id=”myds” type=”DataSource”&gt;
                JdbcUrl = jdbc:hsqldb:mem:movies
              &lt;/Resource&gt;
            &lt;/tomee&gt;
            
            -Dmyds.JdbcUrl=jdbc:mysql://localhost/
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Override whole property
      
      +slide    
        h2 Custom Resources
        pre.small.language-xml
          code.
            &lt;tomee&gt;
              &lt;Resource id="mongoClient" class-name="com.mongodb.MongoClient"&gt;
                host  localhost
              &lt;/Resource&gt;
            &lt;/tomee&gt;
        hr
        pre.small.language-javascript
          code.
            @Resource(name = "mongoClient")
            private MongoClient mongoClient;
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') ActiveMQResourceAdapter,javax.jms.ConnectionFactory,javax.mail.Session 
      
      +slide('alexband')
        h2 Password <span class='important'>Encryption</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide    
        h2 Password Cipher
        pre.small.language-xml
          code.
            &lt;Resource id=”myds” type=”DataSource”&gt;
              //.....
              Password = xMH5uM1V9vQzVUv5LG7YLA==
              PasswordCipher = Static3DES
            &lt;/Resource&gt;
        hr
        pre.small.language-xml
          code.
            &lt;Resource id=”myresource” class-name="org.superbiz.VaultGateway"&gt;
              //.....
              VaultPassword = cipher:Static3DES:xMH5uM1V9vQzVUv5LG7YLA==
            &lt;/Resource&gt;
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') StaticDES comes in TomEE, but you can define your own implementing PasswordCipher int.
      
      +slide('test')
        h1 <span class='important'>Testing</span> and <span class='important'>Java EE</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        
      +slide('isolation')
        h2 Write <span class='important'>Unit</span> Tests
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Write Unit test as usually, small group classes related, and forget about annotations, use Mocks
      
      +slide    
        h2 JUnit
        table
          tr
            td
              pre.small.language-javascript
                code.
                  @Singleton
                  @Path("/color")
                  public class ColorService {
                    @PersistenceContext
                    EntityManager entityManager;

                    @POST
                    public void addColor(...) {}
                    @GET
                    public Color getColor(...){}
                  }
            td.spaceleft
              pre.small.language-javascript
                code.
                  @Test
                  public void addAndGetColor() {
                    EntityManager em = mock(EntityManager.class);
                    //...
                    
                    ColorService colorService = new ColorService();
                    colorService.entityManager = em;
                
                    colorService.addColor("green");
                    assertThat(colorService.getColor(), is("green"));
                  }
        div.footer Alex Soto (@alexsotob)
      +slide('schrodinger')
        h2 Avoid <span class='important'>Schrödinger’s</span> Code
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Code that has been written, but not tested, and is in a state of neither working nor failing until it is observed
      
      +slide
        h2.underline Would it Work in <span class='important'>Production</span>?
        ul.lists
          li Entity Manager configuration
          li Transactions
          li CDI Qualifiers
          li CDI Events
          li JAX-RS
          li HTTP Servlet Filters
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') We don't know until deployed on an AS. Manually?
      
      +slide('arquillian')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Middleware, takes care of starting/stopping the AS and deploy. Reduce int tests to child game
      
      +slide
        h2.underline Steps of <span class='important'>Arquillian</span>
        ul.lists
          li Choose Application Server
          li Start Application Server
          li (micro)Package the Application
          li Run Tests (In Container or As Client)
          li Stop Application Server
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') White/Black Box tests
      
      +slide    
        h2 Arquillian Test
        table
          tr
            td
              pre.small.language-javascript
                code.
                  dependencyManagement {
                    imports {
                      mavenBom 
                      'org.arquillian:arquillian-universe:1.0.0.Alpha1'
                    }
                  }
                  
                  testCompile group: 'org.arquillian.universe', 
                              name: 'arquillian-junit', 
                              ext: 'pom'
                  testCompile group: 'org.apache.openejb', 
                              name: 'arquillian-tomee-embedded', 
                              version:'1.7.2'
                  testCompile group: 'org.apache.openejb', 
                              name: 'tomee-jaxrs', 
                              version:'1.7.2'
            td.spaceleft
              pre.small.language-javascript
                code.
                  @RunWith(Arquillian.class)
                  public class ColorServiceIntegrationTest {

                  @Deployment public static WebArchive create() {
                    return ShrinkWrap.create(WebArchive.class)
                                      .addClasses(ColorService.class, 
                                                  Color.class);
                  }
                  @ArquillianResource private URL webappUrl;

                  @Test @RunAsClient public void postAndGet() {
                    final WebClient webClient = WebClient
                                                .create(webappUrl);
                    final Response response = webClient
                                                .path("color/green")
                                                .post(null);
                    assertThat(response.getStatus(), is(204));
                    //...
                  }
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('engine')
        h2 Let's see in Action
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('whale')
        h2 Docker
        h3 &mdash; not used &mdash;
        h2 in <span class='important'>Production</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        
      +slide('cube')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide
        h2.underline Steps of <span class='important'>Arquillian</span>
        ul.lists
          li Extension for Docker
          li Support for Native, Boot2Docker and Docker-Machine
          li Docker-Compose definition
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Start Stop Docker images. Help for services that call another service
      
      +slide    
        h2 Arquillian Cube Test
        table
          tr
            td
              pre.small.language-javasript
                code.
                  testCompile group: 'org.arquillian.universe', 
                              name: 'arquillian-cube', 
                              ext: 'pom'
            td.spaceleft
              pre.small.language-xml
                code.
                  &lt;arquillian&gt;
                    &lt;extension qualifier="docker"&gt;
                    &lt;property name="definitionFormat"&gt;COMPOSE&lt;/property&gt;
                    &lt;property name="machineName"&gt;dev&lt;/property&gt;
                    &lt;property name="dockerContainersFile"&gt;compose.yml&lt;/property&gt;
                  &lt;/extension&gt;
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        
      +slide
        h2.underline Arquillian Tests
        ul.lists
          li Integration Tests
          li Functional Tests (Drone/Graphene)
          li BDD Tests (Cucumber)
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      
      +slide('datacenter')
        h1 Deploying to <span class='important'>Production</span>
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Fault tolerant, dynamic resources (12h 15d), easy
      
      +slide('mesosmarathon')
        h2.underline Mesos + Marathon
        ul.lists
          li Apache Project
          li Cluster of Resources as One
          li Fault-Tolerant
          li Elastic Distributed
          li Native/Docker
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') Typically u work static 3 servers for x 3 for y but not same resources at once
      
      +slide
        img.schemas(src='images/marathondep.png')
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        
      +slide('discovery')
        h2 Service Discovery
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
        aside(role='note') autorefresh HAProxy --> DNS approach
      
      +slide
        h2 Service Discovery Schema
        img.schemas(src='images/discovery.png')
        aside(role='note') HAProxy is at localhost
        
      +slide
        h2 Run Apache TomEE 
        pre.small.language-json
          code.
            {
              "id": "projectdemo",
              "cmd": "cd apache-tomee-plus* 
                      && sed \"s/8080/$PORT/g\" < ./conf/server.xml > ./conf/server-mesos.xml 
                      && ./bin/catalina.sh run -config ./conf/server-mesos.xml",
              "mem": 256,
              "cpus": 0.5,
              "instances": 1,
              "ports":[10000],
              "constraints": [
                ["hostname", "UNIQUE"]
              ],
              "uris": [
                "http://ftp.cixug.es/apache/tomee/tomee-1.7.2/apache-tomee-1.7.2-plus.tar.gz"
              ]
            }
      
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('engine')
        h2 Let's see in Action
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('ending')
        h1 Let's wind <br/> down
        div.footer
          i.fa.fa-twitter &nbsp;alexsotob&nbsp;
          i.fa.fa-github &nbsp;lordofthejars
      
      +slide('still fight')
        h2 <span class='important'>Java EE</span> vs Spring
        aside(role='note') What you need, Java EE 8

      +slide
        img.avatar(src='images/profile.jpg')
        br
        a(href='http://github.com/lordofthejars/javaee_javaone', style='border:none')
          i.fa.fa-github
          h3 http://github.com/lordofthejars/javaee_javaone
          i.fa.fa-envelope
          h3 asotobu@gmail.com
      
      +slide('javaone')

    script(src='build/build.js')
